{"version":3,"sources":["components/product/ssd.jpg","components/layout/Footer.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","actions/basketAction.js","validation/is-empty.js","components/layout/Navbar.js","components/comman/TextFieldGroup.js","components/auth/Register.js","components/auth/Login.js","components/product/ProductItem.js","actions/productAction.js","components/layout/Landing.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/productReducer.js","reducers/basketReducer.js","reducers/feedbackReducer.js","reducers/addressReducer.js","reducers/orderReducer.js","reducers/index.js","store.js","components/comman/TextAreaInputGroup.js","actions/feedbackAction.js","components/product/Product.js","components/comman/SelectListGroup.js","actions/orderAction.js","actions/addressAction.js","components/order/Order.js","components/comman/PrivaterRoute.js","components/manage/product/ManageProducts.js","components/comman/InputGroup.js","components/manage/product/AddProduct.js","components/manage/product/UpdateProduct.js","components/manage/order/OrderItem.js","components/manage/order/ManageOrders.js","components/address/Address.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","className","Date","getFullYear","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decode","type","payload","logoutUser","dispatch","localStorage","removeItem","addToBasket","product","history","post","then","res","getBasketItem","catch","err","push","get","data","isEmpty","value","undefined","Object","keys","length","trim","Navbar","state","categories","setState","_embedded","error","console","log","response","e","preventDefault","this","props","auth","isAuthenticated","id","deleteBasketItem","list","items","user","baskets","authLink","href","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","map","item","to","title","description","onClick","onClickDeleteBasketItem","bind","onLogoutClick","guestLink","data-target","aria-controls","aria-label","category","name","Component","connect","delete","TextFieldGroup","placeholder","label","info","onChange","disabled","classnames","defaultProps","Register","firstName","lastName","password","password2","phoneNumber","errors","onSubmit","nextProps","target","newUser","registerUser","message","noValidate","protoTypes","PropTypes","func","isRequired","object","userData","withRouter","Login","username","nextContext","loginUser","setItem","jwt_decode","productItem","img","price","addBasket","src","alt","getProduct","getOwnProducts","userId","Landing","getProducts","productId","productContent","products","loading","content","ProductItem","attachments","protoType","basket","initialState","initializeState","addresses","consumer","seller","combineReducers","action","feedback","orders","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","TextAreaFieldGroup","getFeedback","Product","amount","match","params","addFeedback","feedbackItem","images","width","aboutMoreProduct","key","defaultValue","event","array","SelectListGroup","options","disable","selectOptions","option","province","city","home","toString","includes","getOwnOrders","page","getOrderOfSeller","getAddress","Order","location","search","substring","indexOf","address","order","addressId","addOrder","component","rest","render","ManageProducts","sub","deleteOwnProduct","productItems","index","scope","format","createdAt","colSpan","onDeleteProduct","InputGroup","addInput","removeInput","AddProduct","categoryId","details","file","FormData","files","i","splice","newDetail","detail","join","newProduct","parseFloat","JSON","parse","addProduct","inputs","onHandleInputGroupChange","onChangeHandler","hidden","attach","append","fileId","UpdateProduct","updateProduct","put","OrderItem","orderType","updateOrder","update","orderList","ManageOrders","d","activePage","a","b","Pagination","defaultActivePage","totalPages","onPageChange","onPageChangeConsumer","Address","zipCode","updateAddress","addAddress","deleteAddress","addressTable","onDelete","onUpdate","pop","App","jwtToken","decoded","currentTime","now","exp","exact","path","Footer","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be766d57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ssd.f0488c14.jpg\";","import React from 'react';\r\n\r\n\r\nexport default () => (\r\n\r\n    <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\r\n        Copyright &copy; {new Date().getFullYear()} Ecommerce.uz\r\n    </footer>\r\n\r\n);","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {GET_ERRORS, SET_CURRENT_USER} from \"./types\";\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/auth/register\", userData)\r\n        .then(res => history.push(\"/login\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n// Login get user Token\r\n\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"/api/auth/login\", userData)\r\n        .then(res => {\r\n            // Save to Localstorge\r\n            const {token} = res.data;\r\n            // Set token to ls\r\n            localStorage.setItem(\"jwtToken\", token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decode = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decode));\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n            }\r\n        );\r\n};\r\n\r\n// Set login in user\r\nexport const setCurrentUser = decode => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decode\r\n    };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header from future request\r\n    setAuthToken(false);\r\n    // Set current user to {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};\r\n","export let CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const REGISTER_USER = \"REGISTER_USER\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\"\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\"\r\nexport const GET_PRODUCT = \"GET_PRODUCT\"\r\nexport const ADD_TO_BASKET = \"ADD_TO_BASKET\"\r\nexport const GET_BASKET_ITEM = \"GET_BASKET_ITEM\"\r\nexport const GET_FEEDBACKS = \"GET_FEEDBACKS\"\r\nexport const GET_ADDRESSES = \"GET_ADDRESSES\"\r\nexport const GET_ORDERS = \"GET_ORDERS\"\r\nexport const GET_OWN_ORDERS = \"GET_OWN_ORDERS\"\r\nexport const GET_SELLER_ORDERS = \"GET_SELLER_ORDERS\"\r\n\r\n\r\n","import axios from \"axios\";\r\nimport {GET_BASKET_ITEM} from \"./types\";\r\n\r\nexport const addToBasket = (product, history) => dispatch => {\r\n    axios.post(\"/api/baskets\", product)\r\n        .then(res => {\r\n            dispatch(getBasketItem())\r\n        })\r\n        .catch(err => {\r\n                history.push(\"/login\")\r\n            }\r\n        )\r\n}\r\nexport const getBasketItem = () => dispatch => {\r\n    axios.get(\"/api/baskets\")\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_BASKET_ITEM,\r\n                payload: res.data\r\n            })\r\n\r\n        })\r\n}\r\nexport const deleteBasketItem = (id) => dispatch => {\r\n    axios.delete(`/api/baskets/${id}`)\r\n        .then(res =>\r\n            dispatch(getBasketItem())\r\n        )\r\n        .catch(err =>\r\n            console.log(err)\r\n        )\r\n}","const isEmpty = (value) =>\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default  isEmpty;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {logoutUser} from \"../../actions/authActions\";\r\nimport axios from \"axios\"\r\nimport {deleteBasketItem, getBasketItem} from \"../../actions/basketAction\";\r\nimport {connect} from \"react-redux\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\n\r\nclass Navbar extends Component {\r\n    onLogoutClick(e) {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            categories: []\r\n        }\r\n        axios.get(\"/api/categories\")\r\n            .then(res => {\r\n                this.setState({categories: res.data._embedded.categories})\r\n            }).catch(error => console.log(error.response))\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {isAuthenticated} = this.props.auth;\r\n        if (isAuthenticated)\r\n            this.props.getBasketItem()\r\n    }\r\n\r\n    onClickDeleteBasketItem(id) {\r\n        this.props.deleteBasketItem(id);\r\n        console.log(id)\r\n    }\r\n\r\n    render() {\r\n        const {isAuthenticated, user} = this.props.auth;\r\n        const {items} = this.props.baskets;\r\n        let list;\r\n        if (isEmpty(items)) {\r\n            list = []\r\n        } else {\r\n            list = items;\r\n        }\r\n        const authLink = (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <i className=\"fas fa-shopping-basket\"/> <span>{isEmpty(list) ? 0 : list.length}</span>\r\n                    </a>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <div className=\"list-group w-10\"> {list.map(item =>\r\n                            (<div className=\"basket\">\r\n                                    <Link to={\"/product/\" + item.product.id}\r\n                                          className=\"list-group-item list-group-item-action basket-item\">\r\n                                        <div className=\"d-flexjustify-content-between\">\r\n                                            <p className=\"mb-1\">{item.product.title}</p>\r\n                                        </div>\r\n                                        <small className=\"mb-1 \">{item.product.description}</small>\r\n\r\n                                    </Link>\r\n                                    <button className=\"btn btn-danger basket-times\"\r\n                                            onClick={this.onClickDeleteBasketItem.bind(this, item.id)}>\r\n                                        <i className=\"fas fa-times\"\r\n                                        /></button>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                        </div>\r\n                    </div>\r\n\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Account\r\n                    </a>\r\n                    <div className=\"dropdown-menu mr-5\" aria-labelledby=\"navbarDropdown\">\r\n                        <Link className=\"dropdown-item list\" to=\"/addresses\"><i className=\"fas fa-map-marker-alt\"/>Address</Link>\r\n                        <Link className=\"dropdown-item list\" to={\"/chat\"}><i className=\"fas fa-comments\"/> Chat</Link>\r\n                        <Link className=\"dropdown-item list\" to={\"/products\"}><i\r\n                            className=\"fas fa-clipboard-list\"/> Products</Link>\r\n                        <Link className=\"dropdown-item list\" to={\"/orders\"}><i\r\n                            className=\"fas fa-shopping-cart\"/> Orders</Link>\r\n                        <button\r\n                            onClick={this.onLogoutClick.bind(this)}\r\n                            className=\"nav-link logout list\"\r\n                        >\r\n                            <i className=\"fas fa-sign-out-alt\"/>\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n\r\n                </li>\r\n            </ul>\r\n        );\r\n        const guestLink = (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/register\">\r\n                        Sign Up\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <Link className=\"navbar-brand\" to={\"/\"}>Ecommerce</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                               data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Category\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                {this.state.categories\r\n                                    .map(category => <Link className=\"dropdown-item\"\r\n                                                           to={\"/product/\" + category.id}>{category.name}</Link>)\r\n                                }\r\n                            </div>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n\r\n                    {isAuthenticated ? authLink : guestLink}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired,\r\n    getBasketItem: PropTypes.func.isRequired,\r\n    baskets: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n    auth: state.auth,\r\n    baskets: state.baskets\r\n});\r\nexport default connect(\r\n    mapStatetoProps,\r\n    {\r\n        logoutUser,\r\n        getBasketItem,\r\n        deleteBasketItem\r\n    }\r\n)(Navbar);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nconst TextFieldGroup = ({\r\n                            name,\r\n                            placeholder,\r\n                            value,\r\n                            type,\r\n                            label,\r\n                            error,\r\n                            info,\r\n                            onChange,\r\n                            disabled\r\n                        }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                type={type}\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error\r\n                })}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n                disabled={disabled}\r\n            />\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    disabled: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n    type: \"text\"\r\n};\r\nexport default TextFieldGroup;\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {registerUser} from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../comman/TextFieldGroup\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            phoneNumber: \"\",\r\n            errors: \"\"\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            phoneNumber: this.state.phoneNumber,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n\r\n        };\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">\r\n                                Create your ecommerce account\r\n                            </p>\r\n                            {errors.message && <p className=\"text-danger\">{errors.message}</p>}\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Phone number\"\r\n                                    name=\"phoneNumber\"\r\n                                    value={this.state.phoneNumber}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phoneNumber}/>\r\n                                <TextFieldGroup\r\n                                    placeholder=\"First name\"\r\n                                    name=\"firstName\"\r\n                                    value={this.state.firstName}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.firstName}\r\n                                />\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Last name\"\r\n                                    name=\"lastName\"\r\n                                    value={this.state.lastName}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.lastName}\r\n\r\n                                />\r\n                                <TextFieldGroup\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.password}\r\n                                />\r\n                                <TextFieldGroup\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm password\"\r\n                                    name=\"password2\"\r\n                                    value={this.state.password2}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.password2}\r\n                                />\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.protoTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    {registerUser}\r\n)(withRouter(Register));\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport TextFieldGroup from \"../comman/TextFieldGroup\";\r\nimport {loginUser} from \"../../actions/authActions\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: \"\"\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push(\"\");\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <p className=\"lead text-center\">\r\n                                Sign in to your ecommerce account\r\n                            </p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Username\"\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.username ? errors.username : errors.message}\r\n                                />\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.password}\r\n                                />\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {loginUser}\r\n)(Login);\r\n","import React from 'react';\r\nimport \"./product.css\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst productItem = ({title, description, img, price, id, addBasket}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img className=\"card-img-top\" src={\"http://localhost:8080/api/attach/preview/\" + img}\r\n                 alt=\"Card image cap\"/>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <p className=\"card-text\">{description}</p>\r\n                <p className=\"card-text\"><h4 className=\"text-muted\">Price: {price + \" $\"}</h4></p>\r\n                <p className=\"card-text text-center\">\r\n                    <button onClick={addBasket} className=\"btn btn-danger fs\"><i\r\n                        className=\"fas fa-shopping-basket\"/> Add to basket\r\n                    </button>\r\n                    <Link className=\" ml-2 btn btn-info\" to={\"product/\" + id}><i className=\"fas fa-eye\"/> Preview</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default productItem;","import axios from \"axios\"\r\nimport {GET_ERRORS, GET_PRODUCT, GET_PRODUCTS} from \"./types\";\r\nimport isEmpty from \"../validation/is-empty\";\r\n\r\nexport const getProducts = () => dispatch => {\r\n    axios.get(\"/api/products\")\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_PRODUCTS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err\r\n                })\r\n            }\r\n        )\r\n}\r\nexport const getProduct = (id, history) => dispatch => {\r\n    axios.get(`/api/products/${id}`)\r\n        .then(res => {\r\n                dispatch({\r\n                    type: GET_PRODUCT,\r\n                    payload: res.data\r\n                })\r\n            }\r\n        )\r\n        .catch(() =>\r\n            history.push(\"/not-found\")\r\n        )\r\n\r\n}\r\nexport const getOwnProducts = (userId) => dispatch => {\r\n    axios.get(`/api/products?user=${userId}`)\r\n        .then(res => dispatch({\r\n            type: GET_PRODUCTS,\r\n            payload: res.data\r\n        }))\r\n        .catch(() =>\r\n            dispatch({\r\n                type: GET_PRODUCTS,\r\n                payload: {}\r\n            }))\r\n\r\n}\r\nexport const addProduct = (categoryId, product, attach, history) => dispatch => {\r\n    const file = new FormData();\r\n    file.append('file', attach)\r\n    axios.post(\"/api/attach/upload\", file)\r\n        .then(res => {\r\n            const fileId = res.data;\r\n            product.files = (fileId);\r\n            console.log(categoryId)\r\n            axios.post(`/api/products/${categoryId}`, product)\r\n                .then((res) => {\r\n                    history.push(\"/products\")\r\n                    console.log(res.data)\r\n                })\r\n                .catch(err => {\r\n                        dispatch({\r\n                            type: GET_ERRORS,\r\n                            payload: err.response.data\r\n                        })\r\n                        console.log(err.response.data)\r\n                    }\r\n                )\r\n        })\r\n        .catch(err => {\r\n                dispatch({\r\n                    type: GET_ERRORS,\r\n                    payload: err.response.data\r\n                })\r\n                console.log(err.response.data)\r\n            }\r\n        )\r\n\r\n}\r\n\r\nexport const updateProduct = (id, product, attach, history) => dispatch => {\r\n    if (isEmpty(attach.id)) {\r\n        const file = new FormData();\r\n        file.append('file', attach)\r\n        axios.post(\"/api/attach/upload\", file)  \r\n            .then(res => {\r\n                const fileId = res.data;\r\n                product.files = (fileId);\r\n                axios.put(`/api/products/${id}`, product)\r\n                    .then((res) => {\r\n                        history.push(\"/products\")\r\n                        console.log(res.data)\r\n                    })\r\n                    .catch(err => {\r\n                            dispatch({\r\n                                type: GET_ERRORS,\r\n                                payload: err.response.data\r\n                            })\r\n                            console.log(err.response.data)\r\n                        }\r\n                    )\r\n            })\r\n            .catch(err => {\r\n                    dispatch({\r\n                        type: GET_ERRORS,\r\n                        payload: err.response.data\r\n                    })\r\n                    console.log(err.response.data)  \r\n                }\r\n            )\r\n    } else {\r\n        product.files = [attach.id]\r\n        console.log(product)\r\n        axios.put(`/api/products/${id}`, product)\r\n            .then(() => {\r\n                history.push(\"/products\")\r\n            })\r\n            .catch(err => {\r\n                    dispatch({\r\n                        type: GET_ERRORS,\r\n                        payload: err.response.data\r\n                    })\r\n                    console.log(err.response.data)\r\n                }\r\n            )\r\n    }\r\n\r\n\r\n}\r\nexport const deleteOwnProduct = (productId, userId) => dispatch => {\r\n    axios.delete(`/api/products/${productId}`)\r\n        .then(() => dispatch(getOwnProducts(userId)))\r\n        .catch(() => dispatch(getOwnProducts(userId)))\r\n}","import React, {Component} from 'react';\r\nimport ProductItem from \"../product/ProductItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProducts} from \"../../actions/productAction\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\nimport {addToBasket} from \"../../actions/basketAction\";\r\n\r\nclass Landing extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        // this.onClick = this.onClick.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProducts()\r\n    }\r\n\r\n    onClick(id) {\r\n        let product = {\r\n            productId: id\r\n        }\r\n        this.props.addToBasket(product, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {products, loading} = this.props.products;\r\n        let productContent;\r\n        if (!loading) {\r\n            productContent = (<h1>Loading</h1>)\r\n        } else {\r\n            productContent = products.content.map(product =>\r\n                <ProductItem\r\n                    title={product.title} description={product.description}\r\n                    price={product.price} id={product.id}\r\n                    img={!isEmpty(product.attachments.length > 0) ? product.attachments[0].id : \"\"\r\n                    }\r\n                    addBasket={this.onClick.bind(this,product.id)}\r\n\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card-deck mt-2\">\r\n                            <div className=\"card-columns\">\r\n                                {productContent}\r\n                               </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.protoType = {\r\n    addToBasket: PropTypes.func,\r\n    getProducts: PropTypes.func.isRequired,\r\n    products: PropTypes.object.isRequired,\r\n    errors: PropTypes.object,\r\n    basket: PropTypes.object\r\n\r\n}\r\nconst mapStateToProps = state => ({\r\n    products: state.products,\r\n    errors: state.errors,\r\n    baskets: state.baskets\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProducts, addToBasket})(Landing);","import isEmpty from '../validation/is-empty'\r\nimport { SET_CURRENT_USER} from '../actions/types';\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:{\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {CLEAR_ERRORS, GET_BASKET_ERRORS, GET_ERRORS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: {\r\n            return action.payload;\r\n        }\r\n        case CLEAR_ERRORS: {\r\n            return {};\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_PRODUCT, GET_PRODUCTS} from \"../actions/types\";\r\n\r\nconst initializeState = {\r\n    products: {},\r\n    product: {},\r\n    loading: false\r\n}\r\nexport default function (state = initializeState, action) {\r\n    switch (action.type) {\r\n        case GET_PRODUCTS: {\r\n            return {\r\n                ...state,\r\n                products: action.payload,\r\n                loading: true\r\n            }\r\n        }\r\n        case GET_PRODUCT: {\r\n            return {\r\n                ...state,\r\n                product: action.payload,\r\n                loading: true\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n    }\r\n\r\n}","import {ADD_TO_BASKET, GET_BASKET_ERRORS, GET_BASKET_ITEM} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    message: {},\r\n    items: []\r\n};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_TO_BASKET: {\r\n            return {message: action.payload}\r\n        }\r\n\r\n        case GET_BASKET_ITEM: {\r\n            return {\r\n                items: action.payload\r\n            };\r\n        }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n    }\r\n\r\n}","import {CLEAR_ERRORS, GET_BASKET_ERRORS, GET_ERRORS, GET_FEEDBACKS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_FEEDBACKS: {\r\n            return action.payload;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_ADDRESSES} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    addresses: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ADDRESSES: {\r\n            return {\r\n                addresses: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n    }\r\n\r\n}","import {GET_OWN_ORDERS, GET_SELLER_ORDERS} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    consumer: {},\r\n    seller: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_OWN_ORDERS: {\r\n            return {\r\n                consumer: action.payload,\r\n                seller: state.seller\r\n            }\r\n        }\r\n        case GET_SELLER_ORDERS: {\r\n            return {\r\n                seller: action.payload,\r\n                consumer: state.consumer\r\n            }\r\n        }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n    }\r\n\r\n}","import {combineReducers} from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport productReducer from \"./productReducer\";\r\nimport basketReducer from \"./basketReducer\";\r\nimport feedbackReducer from \"./feedbackReducer\";\r\nimport addressReducer from \"./addressReducer\";\r\nimport orderReducer from \"./orderReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    products: productReducer,\r\n    errors: errorReducer,\r\n    baskets: basketReducer,\r\n    feedback: feedbackReducer,\r\n    addresses: addressReducer,\r\n    orders: orderReducer\r\n});\r\n","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextAreaFieldGroup = ({\r\n                                name,\r\n                                placeholder,\r\n                                value,\r\n                                error,\r\n                                info,\r\n                                onChange,\r\n                            }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n\r\n            <textarea\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error\r\n                })}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextAreaFieldGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextAreaFieldGroup;\r\n","import axios from \"axios\";\r\nimport {GET_FEEDBACKS} from \"./types\";\r\n\r\nexport const getFeedback = (productId) => dispatch => {\r\n    axios.get(`/api/feedback?productId=${productId}`)\r\n        .then(res =>\r\n            dispatch({\r\n                type: GET_FEEDBACKS,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err =>\r\n            console.log(err.response.data)\r\n        )\r\n}\r\nexport const addFeedback = (feedback, history) => dispatch => {\r\n    axios.post(\"/api/feedback\", feedback)\r\n        .then(res => dispatch(getFeedback(feedback.id)))\r\n        .catch(err => history.push(\"/login\"))\r\n}","import React, {Component} from 'react';\r\nimport images from \"./ssd.jpg\"\r\nimport TextAreaFieldGroup from \"../comman/TextAreaInputGroup\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {getProduct} from \"../../actions/productAction\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\"\r\nimport isEmpty from \"../../validation/is-empty\";\r\nimport {addFeedback, getFeedback} from \"../../actions/feedbackAction\";\r\nimport {addToBasket} from \"../../actions/basketAction\";\r\n\r\nclass Product extends Component {\r\n    componentDidMount() {\r\n        if (this.props.match.params.id) {\r\n            this.props.getProduct(this.props.match.params.id, this.props.history);\r\n            this.props.getFeedback(this.props.match.params.id)\r\n        }\r\n    }\r\n\r\n    state = {\r\n        amount: 0,\r\n        message: \"\",\r\n        error: \"\"\r\n    }\r\n\r\n    onClick(id) {\r\n        let product = {\r\n            productId: id\r\n        }\r\n        this.props.addToBasket(product, this.props.history);\r\n    }\r\n\r\n    onChange(e) {\r\n\r\n        this.setState({[e.target.name]: (e.target.value)});\r\n    }\r\n\r\n    addFeedback(productId) {\r\n        console.log(\"dfsdfsd\")\r\n        let message = this.state.message;\r\n        if (isEmpty(message)) {\r\n            this.setState({error: \"Maydonni to`ldirishingiz kerak.\"})\r\n        } else {\r\n            const data = {\r\n                id: productId,\r\n                message: message\r\n            }\r\n            this.setState({\r\n                message: \"\"\r\n            })\r\n            this.props.addFeedback(data, this.props.history)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {product} = this.props.products;\r\n        const feedback = this.props.feedback;\r\n        let content;\r\n        if (isEmpty(product)) {\r\n            content = <h1>Loading</h1>\r\n        } else {\r\n            let feedbackItem = \"\";\r\n            if (!isEmpty(feedback)) {\r\n                feedbackItem = (\r\n                    feedback.map(item =>\r\n                        <li className=\"list-group-item\">\r\n                            <div className=\"feedback-group\">\r\n                                <img src={images} width=\"80px\" className=\"img-fluid img\"/>\r\n                                <h6>{item.user}</h6>\r\n                            </div>\r\n                            <p>{item.message}</p>\r\n                        </li>)\r\n\r\n                )\r\n            }\r\n            content = (\r\n                <div>\r\n                    <div className=\"row my-4\">\r\n                        <div className=\"col-md col-sm-12\">\r\n                            <img src={\"http://localhost:8080/api/attach/preview/\" + product.attachments[0].id}\r\n                                 alt=\"this is a product images\" className=\"img-fluid\"/>\r\n                        </div>\r\n                        <div className=\"col-md col-sm-12\">\r\n                            <h4><b>Title: {product.title}</b></h4>\r\n                            <h5 className=\"text-muted\"><b> Price: {product.price} $ </b></h5>\r\n                            <p>Desciption: {product.description}</p>\r\n                            <ul className=\"list-group list-group-flush my-3\">\r\n                                {Object.keys(product.aboutMoreProduct).map((key) =>\r\n                                    <li className=\"list-group-item\">{key}: {product.aboutMoreProduct[key]}</li>\r\n                                )}\r\n                            </ul>\r\n                            <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Amount</span>\r\n                                </div>\r\n                                <input type=\"number\" name=\"amount\" className=\"form-control\" defaultValue={0}\r\n                                       onChange={event => this.onChange(event)}/>\r\n                            </div>\r\n                            <Link className=\"btn btn-info btn-block\"\r\n                                  to={`/order/${product.id}?amount=${this.state.amount}`}>Buy</Link>\r\n                            <button onClick={this.onClick.bind(this, product.id)}\r\n                                    className=\"btn btn-danger btn-block\">Add to basket\r\n                            </button>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"\">\r\n\r\n                        <div className=\"col-md-12\">\r\n                            <h6>Feedback</h6>\r\n                            <div className=\"form-group\">\r\n                                <TextAreaFieldGroup\r\n                                    placeholder=\"Product to feedback\"\r\n                                    value={this.state.message}\r\n                                    name=\"message\"\r\n                                    onChange={(e) => this.onChange(e)}\r\n                                    error={this.state.error}\r\n                                />\r\n                            </div>\r\n                            <button onClick={this.addFeedback.bind(this, product.id)} type=\"submit\"\r\n                                    className=\"btn btn-dark\">\r\n                                Submit\r\n                            </button>\r\n\r\n\r\n                        </div>\r\n                        <div className=\"col-md-12\">\r\n                            <ul className=\"list-group list-group-flush my-3\">\r\n                                {feedbackItem}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div>\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProduct.protoType = {\r\n    getProduct: PropTypes.func.isRequired,\r\n    addToBasket: PropTypes.func.isRequired,\r\n    products: PropTypes.object.isRequired,\r\n    feedback: PropTypes.array,\r\n    getFeedback: PropTypes.func.isRequired,\r\n    addFeedback: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    products: state.products,\r\n    feedback: state.feedback\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {\r\n        getProduct,\r\n        getFeedback,\r\n        addToBasket,\r\n        addFeedback\r\n    }\r\n)(Product);","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\"\r\n\r\n\r\nconst SelectListGroup = ({name, value, error, info, onChange, options, disable}) => {\r\n    const selectOptions = options.map(option => (\r\n        <option disabled={disable} key={option.id} value={option.id ? option.id : option}>\r\n            {(option.province) ? (\r\n                option.province + \" vil, \" + option.city + \" shahar(tuman), \" + option.home) : option.name ? option.name : option\r\n            }\r\n\r\n        </option>\r\n    ));\r\n    return (\r\n        <div className=\"form-group\">\r\n            <select\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error\r\n                })}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n            >\r\n                {selectOptions}\r\n            </select>\r\n            {info && <small\r\n                className=\"form-text text-muted\">{info} {info.toString().includes(\"Kerakli manzilni\") ?\r\n                < Link to={\"/address\"}>Yaratish</Link> : \"\"}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nSelectListGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nSelectListGroup.defaultProps = {\r\n    type: false\r\n};\r\n\r\nexport default SelectListGroup;\r\n","import axios from \"axios\";\r\nimport {GET_OWN_ORDERS, GET_SELLER_ORDERS} from \"./types\";\r\n\r\nexport const addOrder = (order, history) => dispatch => {\r\n    axios.post(\"/api/orders\", order)\r\n        .then(res => {\r\n            history.push(\"/orders\")\r\n        })\r\n        .catch(err => {\r\n            console.log(err.response.data)\r\n        })\r\n}\r\nexport const getOwnOrders = (page = 0) => dispatch => {\r\n    axios.get(\"/api/orders?page=\" +  (!page ? 0 : (page - 1)))\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_OWN_ORDERS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_OWN_ORDERS,\r\n                payload: {\r\n                    content: []\r\n                }\r\n            })\r\n\r\n        })\r\n}\r\nexport const getOrderOfSeller = (page = 0) => dispatch => {\r\n    axios.get(\"/api/orders/seller?page=\" + (!page ? 0 : (page - 1)))\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_SELLER_ORDERS,\r\n                payload: res.data\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_SELLER_ORDERS,\r\n                payload: {\r\n                    content: []\r\n                }\r\n            })\r\n\r\n        })\r\n}\r\nexport const updateOrder = (order, id) => dispatch => {\r\n    axios.put(`/api/orders/${id}`, order)\r\n        .then(() => {\r\n            dispatch(getOrderOfSeller())\r\n            dispatch(getOwnOrders())\r\n        })\r\n        .catch(() => console.log())\r\n}","import axios from \"axios\";\r\nimport {GET_ADDRESSES, GET_ERRORS} from \"./types\";\r\n\r\nexport const getAddress = () => dispatch => {\r\n    axios.get(\"/api/addresses\")\r\n        .then(res => dispatch({\r\n            type: GET_ADDRESSES,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        })\r\n}\r\nexport const addAddress = (address, history) => dispatch => {\r\n    axios.post(\"/api/addresses\", address)\r\n        .then(() => {\r\n            dispatch(getAddress())\r\n            history.pop()\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\nexport const updateAddress = (address) => dispatch => {\r\n    axios.put(\"/api/addresses\", address)\r\n        .then(() => {\r\n            dispatch(getAddress())\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n}\r\nexport const deleteAddress = (id) => dispatch => {\r\n\r\n    axios.delete(`/api/addresses/${id}`)\r\n        .then(() => dispatch(getAddress()))\r\n        .catch(() =>\r\n            console.log(\"Something is wrong\")\r\n        )\r\n}","import React, {Component} from 'react';\r\nimport SelectListGroup from \"../comman/SelectListGroup\";\r\nimport isEmpty from \"../../validation/is-empty\";\r\nimport {connect} from \"react-redux\";\r\nimport {addOrder} from \"../../actions/orderAction\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\"\r\nimport {getAddress} from \"../../actions/addressAction\";\r\n\r\nclass Order extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let amount = this.props.location.search;\r\n        amount = amount.substring(amount.indexOf(\"=\") + 1)\r\n        this.state = {\r\n            productId: this.props.match.params.id,\r\n            amount: amount,\r\n            address: \"\",\r\n            error: \"\"\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAddress();\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        let {addresses} = this.props.addresses;\r\n        e.preventDefault();\r\n\r\n        let order = {\r\n            productId: this.state.productId,\r\n            amount: this.state.amount,\r\n            addressId: this.state.address\r\n        }\r\n        if (addresses.length === 0 || isEmpty(addresses)) {\r\n            this.setState({error: \"Iltimos addressni hosil qiling.\"})\r\n            return;\r\n        }\r\n        if (isEmpty(order.addressId)) {\r\n            order.addressId = addresses[0].id\r\n        }\r\n        console.log(order.addressId)\r\n        this.props.addOrder(order, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        let {addresses} = this.props.addresses;\r\n        if (addresses.length === 0 || isEmpty(addresses)) {\r\n            addresses = []\r\n        }\r\n        let {product} = this.props\r\n        let content = (<h1>Loading</h1>)\r\n        if (!isEmpty(product)) {\r\n            content = (<div className=\"card\">\r\n                <img className=\"card-img-top\"\r\n                     src={\"http://localhost:8080/api/attach/preview/\" + product.attachments[0].id}\r\n                     alt=\"Card image cap\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{product.title}</h5>\r\n                    <p className=\"card-text\">{product.description}</p>\r\n                    <p className=\"card-text\"><h4 className=\"text-muted\">Price: {product.price + \" $\"}</h4>\r\n                    </p>\r\n                </div>\r\n            </div>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <form className=\"row\" onSubmit={this.onSubmit}>\r\n                    <div className=\"col-md-8 offset-2\">\r\n                        <h1>Buyutma berish</h1>\r\n                        <SelectListGroup\r\n                            name=\"address\"\r\n                            value={this.state.address}\r\n                            onChange={this.onChange}\r\n                            options={addresses}\r\n                            info={\"Kerakli manzilni tanlang, agar mavjud bolsa yangi yaratishingi kerak.\"}\r\n                            error={this.state.error}\r\n                        />\r\n\r\n\r\n                    </div>\r\n                    <div className=\"col-md-8 offset-2\">\r\n                        {content}\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Buy\"\r\n                            className=\"btn btn-info btn-block mt-4\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nOrder.protoType = {\r\n    addresses: PropTypes.array.isRequired,\r\n    products: PropTypes.object.isRequired,\r\n    getAddress: PropTypes.func.isRequired,\r\n    addOrder: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    addresses: state.addresses,\r\n    product: state.products.product\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    getAddress,\r\n    addOrder\r\n})(withRouter(Order));","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.isAuthenticated === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"\" />\r\n            )\r\n        }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport Moment from \"react-moment\"\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {deleteOwnProduct, getOwnProducts} from \"../../../actions/productAction\";\r\nimport isEmpty from \"../../../validation/is-empty\";\r\n\r\nclass ManageProducts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const {user} = this.props.auth;\r\n        this.props.getOwnProducts(user.sub);\r\n    }\r\n\r\n    onDeleteProduct(id) {\r\n        const {user} = this.props.auth;\r\n        this.props.deleteOwnProduct(id,user.sub );\r\n    }\r\n\r\n\r\n    render() {\r\n        const {products} = this.props.products;\r\n        let productItems = \"\"\r\n        if (!isEmpty(products)) {\r\n            productItems = products.content.map((product, index) =>\r\n                <tr key={product.id}>\r\n                    <th scope=\"row\">{index + 1}</th>\r\n                    <td>{product.title}</td>\r\n                    <td>{product.description}</td>\r\n                    <td>{product.price}</td>\r\n                    <td><Moment format=\"YYYY/MM/DD\">{product.createdAt}</Moment></td>\r\n                    <td colSpan={1}>\r\n                        <button onClick={event => this.onDeleteProduct(product.id)}\r\n                                className={\"btn btn-danger btn-block\"}> Delete\r\n                        </button>\r\n                    </td>\r\n                    <td>\r\n                        <Link to={`/update-product/${product.id}`} className={\"btn btn-info btn-block\"}> Update</Link>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n\r\n\r\n        return (\r\n            <div className={\"row \"}>\r\n                <div className=\" offset-1 col-md-10\">\r\n                    <h3 className={\"mx-5 my-4\"}> Products</h3>\r\n                    <Link className={\"btn btn-info mb-3\"} to={\"/add-product\"}> Add product</Link>\r\n                    <table className=\"table table-hover text-center\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Title</th>\r\n                            <th scope=\"col\">Description</th>\r\n                            <th scope=\"col\">Price($)</th>\r\n                            <th scope=\"col\">Time(YYYY/MM/DD)</th>\r\n                            <th colSpan={2}>Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {productItems}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nManageProducts.propTypes = {\r\n    getOwnProducts: PropTypes.func.isRequired,\r\n    deleteOwnProduct: PropTypes.func.isRequired,\r\n    products: PropTypes.array.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    products: state.products,\r\n    auth: state.auth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getOwnProducts, deleteOwnProduct})(withRouter(ManageProducts));","import React from 'react';\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst InputGroup = ({\r\n                        name,\r\n                        placeholder,\r\n                        value,\r\n                        error,\r\n                        type,\r\n                        info,\r\n                        onChange,\r\n                        addInput,\r\n                        removeInput\r\n                    }) => {\r\n    return (\r\n        <div className=\"input-group my-2\" onChange={onChange}>\r\n\r\n            <div className=\"input-group-prepend\">\r\n                <button className=\"btn btn-danger\" onClick={removeInput} type=\"button\">-</button>\r\n\r\n            </div>\r\n            <input\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error\r\n                })}\r\n                placeholder={placeholder}\r\n                name={name[0]}\r\n                value={value.name ? value.name : \"\"}\r\n\r\n            />\r\n            <input\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error\r\n                })}\r\n                placeholder={placeholder}\r\n                name={name[1]}\r\n                value={value.value ? value.value : \"\"}\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <button className=\"btn btn-info\" onClick={addInput} type=\"button\">+</button>\r\n            </div>\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    )\r\n}\r\nInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    error: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\nInputGroup.defaultProps = {\r\n    type: \"text\"\r\n};\r\n\r\nexport default InputGroup;","import React, {Component} from 'react';\r\nimport TextFieldGroup from \"../../comman/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../../comman/TextAreaInputGroup\";\r\nimport axios from \"axios\";\r\nimport SelectListGroup from \"../../comman/SelectListGroup\";\r\nimport InputGroup from \"../../comman/InputGroup\";\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {addProduct} from \"../../../actions/productAction\";\r\n\r\nclass AddProduct extends Component {\r\n    onChangeHandler(e) {\r\n        const data = new FormData()\r\n        this.setState({file: e.target.files[0]})\r\n        console.log(e.target.files[0])\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categoryId: \"\",\r\n            title: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            errors: \"\",\r\n            categories: [],\r\n            details: [\r\n                {\r\n                    name: \"\",\r\n                    value: \"\"\r\n                }\r\n            ],\r\n            file: {}\r\n\r\n        }\r\n        axios.get(\"/api/categories\")\r\n            .then(res => {\r\n                this.setState({categories: res.data._embedded.categories})\r\n            }).catch(error => console.log(error.response))\r\n\r\n\r\n    }\r\n\r\n    addInput(i, index) {\r\n        let details = this.state.details;\r\n        if (i > 0) {\r\n            details.push({\r\n                name: \"\",\r\n                value: \"\"\r\n            })\r\n        }\r\n        if (i < 0) {\r\n            details.splice(index, 1)\r\n        }\r\n        this.setState({details: details})\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onHandleInputGroupChange(e, id) {\r\n        let newDetail = {[e.target.name]: e.target.value};\r\n        console.log(newDetail)\r\n        let details = this.state.details;\r\n        details[id] = {\r\n            name: newDetail[\"name\" + id] ? newDetail[\"name\" + id] : details[id].name,\r\n            value: newDetail[\"value\" + id] ? newDetail[\"value\" + id] : details[id].value\r\n        }\r\n        this.setState({details: details})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let detail = this.state.details.map(detail => {\r\n            return \"\\\"\" + detail.name + \"\\\":\\\"\" + detail.value + \"\\\"\"\r\n\r\n        })\r\n        detail = (detail.join(\",\").toString())\r\n        detail = \"{\" + detail + \"}\"\r\n        const newProduct = {\r\n            \"title\": this.state.title,\r\n            \"description\": this.state.description,\r\n            \"files\": [],\r\n            \"price\": parseFloat(this.state.price),\r\n            \"aboutMoreProduct\": JSON.parse(detail)\r\n        }\r\n        let file = this.state.file;\r\n        this.props.addProduct(this.state.categoryId ? this.state.categoryId : this.state.categories[0].id, newProduct, file, this.props.history)\r\n    }\r\n\r\n\r\n    render() {\r\n        const {errors, details} = this.state\r\n        let inputs = details.map((detail, i) =>\r\n            <InputGroup onChange={(e) => this.onHandleInputGroupChange(e, i)}\r\n                        value={detail}\r\n                        addInput={() => this.addInput(+1, i)}\r\n                        removeInput={() => this.addInput(-1, i)}\r\n                        name={[\"name\" + i, \"value\" + i]}/>\r\n        )\r\n        return (\r\n            <div className={\"row mx-5 my-2\"}>\r\n                <div className=\"col-md-8 offset-2\">\r\n                    <h3 className={\"my-4\"}>Add Product</h3>\r\n                    <form onSubmit={e => this.onSubmit(e)}>\r\n                        <SelectListGroup onChange={(e) => this.onChange(e)}\r\n                                         value={this.state.categoryId}\r\n                                         name={\"categoryId\"}\r\n                                         error={this.state.errors.categoryId}\r\n                                         options={this.state.categories}\r\n                        />\r\n                        <TextFieldGroup onChange={(e) => this.onChange(e)}\r\n                                        placeholder={\"Title\"}\r\n                                        error={errors.title} value={this.state.title}\r\n                                        name={\"title\"}/>\r\n                        <TextAreaFieldGroup onChange={(e) => this.onChange(e)}\r\n                                            placeholder={\"Description\"}\r\n                                            error={errors.description}\r\n                                            value={this.state.description}\r\n                                            name={\"description\"}/>\r\n                        <TextFieldGroup onChange={(e) => this.onChange(e)}\r\n                                        placeholder={\"Price\"}\r\n                                        value={this.state.price}\r\n                                        name={\"price\"}\r\n                                        error={errors.price}\r\n\r\n                        />\r\n                        {inputs}\r\n                        <label className=\"file\">\r\n                            <span className={\"btn btn-primary\"}> Browse</span>\r\n                            <input onChange={e => this.onChangeHandler(e)} hidden type=\"file\" id=\"file\"\r\n                                   aria-label=\"File browser example\"/>\r\n                            <span\r\n                                className=\"mx-3\">{this.state.file.name ? this.state.file.name : \"Choose File ...\"}</span>\r\n                        </label>\r\n                        <input className={\"btn btn-info btn-block\"} type=\"submit\"/>\r\n                    </form>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProduct.propTypes = {\r\n    categories: PropTypes.object,\r\n    errors: PropTypes.object,\r\n    addProduct: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {addProduct})(withRouter(AddProduct));","import React, {Component} from 'react';\r\nimport TextFieldGroup from \"../../comman/TextFieldGroup\";\r\nimport TextAreaFieldGroup from \"../../comman/TextAreaInputGroup\";\r\nimport axios from \"axios\";\r\nimport SelectListGroup from \"../../comman/SelectListGroup\";\r\nimport InputGroup from \"../../comman/InputGroup\";\r\nimport PropTypes from \"prop-types\"\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getProduct, updateProduct} from \"../../../actions/productAction\";\r\nimport isEmpty from \"../../../validation/is-empty\";\r\n\r\nclass UpdateProduct extends Component {\r\n    onChangeHandler(e) {\r\n        const data = new FormData()\r\n        this.setState({file: e.target.files[0]})\r\n        console.log(e.target.files[0])\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.id) {\r\n            const id = this.props.match.params.id;\r\n            this.props.getProduct(id, this.props.history)\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            categoryId: \"\",\r\n            title: \"\",\r\n            description: \"\",\r\n            price: \"\",\r\n            errors: \"\",\r\n            categories: [],\r\n            details: [\r\n                {\r\n                    name: \"\",\r\n                    value: \"\"\r\n                }\r\n            ],\r\n            file: {}\r\n\r\n        }\r\n        axios.get(\"/api/categories\")\r\n            .then(res => {\r\n                this.setState({categories: res.data._embedded.categories})\r\n            }).catch(error => console.log(error.response))\r\n\r\n\r\n    }\r\n\r\n    addInput(i, index) {\r\n        let details = this.state.details;\r\n        if (i > 0) {\r\n            details.push({\r\n                name: \"\",\r\n                value: \"\"\r\n            })\r\n        }\r\n        if (i < 0) {\r\n            details.splice(index, 1)\r\n        }\r\n        this.setState({details: details})\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onHandleInputGroupChange(e, id) {\r\n        let newDetail = {[e.target.name]: e.target.value};\r\n        console.log(newDetail)\r\n        let details = this.state.details;\r\n        details[id] = {\r\n            name: newDetail[\"name\" + id] ? newDetail[\"name\" + id] : details[id].name,\r\n            value: newDetail[\"value\" + id] ? newDetail[\"value\" + id] : details[id].value\r\n        }\r\n        this.setState({details: details})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let detail = this.state.details.map(detail => {\r\n            return \"\\\"\" + detail.name + \"\\\":\\\"\" + detail.value + \"\\\"\"\r\n\r\n        })\r\n        detail = (detail.join(\",\").toString())\r\n        detail = \"{\" + detail + \"}\"\r\n        const newProduct = {\r\n            \"title\": this.state.title,\r\n            \"description\": this.state.description,\r\n            \"files\": [],\r\n            \"price\": parseFloat(this.state.price),\r\n            \"aboutMoreProduct\": JSON.parse(detail)\r\n        }\r\n        let file = this.state.file;\r\n        this.props.updateProduct(this.state.id, newProduct, file, this.props.history)\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (nextProps.errors === {}) {\r\n            this.setState({errors: nextProps.errors});\r\n        } else {\r\n            const product = nextProps.product;\r\n            console.log(product)\r\n            let detail = Object.keys(product.aboutMoreProduct).map(key => {\r\n                return {\r\n                    \"name\": key,\r\n                    \"value\": product.aboutMoreProduct[key]\r\n                };\r\n            })\r\n            console.log(detail)\r\n            this.setState({\r\n                id: product.id,\r\n                categoryId: product.category.id,\r\n                title: product.title,\r\n                description: product.description,\r\n                price: product.price,\r\n                file: {\r\n                    ...product.attachments[0]\r\n                },\r\n                details: detail\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {errors, details} = this.state\r\n        let inputs = \"\"\r\n        if (!isEmpty(details))\r\n            inputs = details.map((detail, i) =>\r\n                <InputGroup onChange={(e) => this.onHandleInputGroupChange(e, i)}\r\n                            value={detail}\r\n                            addInput={() => this.addInput(+1, i)}\r\n                            removeInput={() => this.addInput(-1, i)}\r\n                            name={[\"name\" + i, \"value\" + i]}/>\r\n            )\r\n        return (\r\n            <div className={\"row mx-5 my-2\"}>\r\n                <div className=\"col-md-8 offset-2\">\r\n                    <h3 className={\"my-4\"}>Update Product</h3>\r\n                    <form onSubmit={e => this.onSubmit(e)}>\r\n                        <SelectListGroup onChange={(e) => this.onChange(e)}\r\n                                         value={this.state.categoryId}\r\n                                         name={\"categoryId\"}\r\n                                         error={this.state.errors.categoryId}\r\n                                         options={this.state.categories}\r\n                                         disable={true}\r\n                        />\r\n                        <TextFieldGroup onChange={(e) => this.onChange(e)}\r\n                                        placeholder={\"Title\"}\r\n                                        error={errors.title} value={this.state.title}\r\n                                        name={\"title\"}/>\r\n                        <TextAreaFieldGroup onChange={(e) => this.onChange(e)}\r\n                                            placeholder={\"Description\"}\r\n                                            error={errors.description}\r\n                                            value={this.state.description}\r\n                                            name={\"description\"}/>\r\n                        <TextFieldGroup onChange={(e) => this.onChange(e)}\r\n                                        placeholder={\"Price\"}\r\n                                        value={this.state.price}\r\n                                        name={\"price\"}\r\n                                        error={errors.price}\r\n\r\n                        />\r\n                        {inputs}\r\n                        <label className=\"file\">\r\n                            <span className={\"btn btn-primary\"}> Browse</span>\r\n                            <input onChange={e => this.onChangeHandler(e)} hidden type=\"file\" id=\"file\"\r\n                                   aria-label=\"File browser example\"/>\r\n                            <span\r\n                                className=\"mx-3\">{this.state.file.name ? this.state.file.name : \"Choose File ...\"}</span>\r\n                        </label>\r\n                        <input className={\"btn btn-info btn-block\"} type=\"submit\"/>\r\n                    </form>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUpdateProduct.propTypes = {\r\n    categories: PropTypes.object,\r\n    errors: PropTypes.object,\r\n    product: PropTypes.object.isRequired,\r\n    getProduct: PropTypes.func.isRequired,\r\n    updateProduct: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    product: state.products.product\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProduct, updateProduct})(withRouter(UpdateProduct));\r\n","import React, {Component} from 'react';\r\nimport isEmpty from \"../../../validation/is-empty\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\nimport SelectListGroup from \"../../comman/SelectListGroup\";\r\n\r\nclass OrderItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            orderType: \"\"\r\n        }\r\n\r\n    }\r\n\r\n\r\n    onChange(e, id) {\r\n        const updateOrder = {\r\n            orderType: e.target.value\r\n        }\r\n        this.props.update(updateOrder, id)\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {consumer, seller} = this.props;\r\n        let orderList = \"Not Found\"\r\n\r\n        if (!isEmpty(consumer)) {\r\n            orderList = consumer.content.map((order, index) =>\r\n                <tr key={order.id}>\r\n                    <td scope=\"row\">{\"c \" + order.id}</td>\r\n                    <td><Link to={\"/product/\" + order.product.id}>{order.product.title}</Link></td>\r\n                    <td>{order.amount}</td>\r\n                    <td>{order.address.city + \" \" + order.address.home}</td>\r\n                    <td>{order.orderType}</td>\r\n                    <td><Moment format=\"YYYY/MM/DD\">{order.createdAt}</Moment></td>\r\n                    <td><Link to={\"/message\"}><i className=\"fas fa-comments\"/></Link></td>\r\n                </tr>\r\n            )\r\n        }\r\n        if (!isEmpty(seller)) {\r\n            orderList = seller.content.map((order, index) =>\r\n                <tr key={order.id}>\r\n                    <td scope=\"row\">{\"s \" + order.id}</td>\r\n                    <td><Link to={\"/product/\" + order.product.id}>{order.product.title}</Link></td>\r\n                    <td>{order.amount}</td>\r\n                    <td>{order.address.city + \" \" + order.address.home}</td>\r\n                    <td><SelectListGroup\r\n                        onChange={(e) => this.onChange(e, order.id)}\r\n                        options={[\"COMPLETE\", \"REJECTED\", \"NEW\", \"ACCEPT\"]}\r\n                        value={order.orderType}\r\n                        name={\"orderType\"}/>\r\n                    </td>\r\n                    <td><Moment format=\"YYYY/MM/DD\">{order.createdAt}</Moment></td>\r\n                    <td><Link to={\"/message\"}><i className=\"fas fa-comments\"/></Link></td>\r\n                </tr>\r\n            )\r\n\r\n        }\r\n        return (\r\n            <div className={\"text-center\"}>\r\n                <table className=\"table table-hover text-center\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Product name</th>\r\n                        <th scope=\"col\">Amount</th>\r\n                        <th scope=\"col\">Address</th>\r\n                        <th scope=\"col\">Time(YYYY/MM/DD)</th>\r\n                        <th scope=\"col\">OrderType</th>\r\n                        <th colSpan={2}>Actions</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {orderList}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderItem;","import React, {Component} from 'react';\r\nimport OrderItem from \"./OrderItem\";\r\nimport {getOrderOfSeller, getOwnOrders, updateOrder} from \"../../../actions/orderAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\"\r\nimport {Pagination} from \"semantic-ui-react\";\r\n\r\nclass ManageOrders extends Component {\r\n    componentDidMount() {\r\n        this.props.getOrderOfSeller();\r\n        this.props.getOwnOrders();\r\n    }\r\n\r\n    onPageChange(e, d) {\r\n        this.props.getOrderOfSeller(d.activePage)\r\n    }\r\n\r\n    onPageChangeConsumer(e, d) {\r\n        this.props.getOwnOrders(d.activePage)\r\n    }\r\n\r\n\r\n    render() {\r\n        const {consumer, seller} = this.props.orders;\r\n        let a = \"Loading\"\r\n        let b = \"Loading\"\r\n        if (consumer !== undefined) {\r\n            b = (<div>\r\n\r\n                <OrderItem consumer={consumer}/>\r\n                <Pagination defaultActivePage={0} totalPages={consumer.totalPages}\r\n                            onPageChange={(event, data) => this.onPageChangeConsumer(event, data)}/>\r\n            </div>)\r\n        }\r\n        if (seller !== undefined) {\r\n            a = (<div>\r\n                    <OrderItem seller={seller} update={this.props.updateOrder}/>\r\n                    <Pagination defaultActivePage={0} totalPages={seller.totalPages}\r\n                                onPageChange={(event, data) => this.onPageChange(event, data)}/>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className={\"row\"}>\r\n                <div className=\"col-md-12 my-3\">\r\n                    <h3>Received order</h3>\r\n                    {a}\r\n                </div>\r\n                <div className=\"col-md-12\">\r\n                    <h3>Your orders</h3>\r\n                    {b}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nManageOrders.propTypes = {\r\n    orders: PropTypes.object.isRequired,\r\n    getOrderOfSeller: PropTypes.func.isRequired,\r\n    getOwnOrders: PropTypes.func.isRequired,\r\n    updateOrder: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    orders: state.orders\r\n})\r\nexport default connect(mapStateToProps, {getOwnOrders, getOrderOfSeller, updateOrder})(withRouter(ManageOrders));","import React, {Component} from 'react';\r\nimport TextFieldGroup from \"../comman/TextFieldGroup\";\r\nimport withRouter from \"react-router-dom/es/withRouter\";\r\nimport {connect} from \"react-redux\";\r\nimport {addAddress, deleteAddress, getAddress, updateAddress} from \"../../actions/addressAction\";\r\nimport propTypes from \"prop-types\"\r\nimport isEmpty from \"../../validation/is-empty\";\r\n\r\nclass Address extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"\",\r\n            province: \"\",\r\n            city: \"\",\r\n            home: \"\",\r\n            zipCode: \"\",\r\n            addresses: [],\r\n            update: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getAddress();\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        let address = {...this.state}\r\n        if (!this.state.update)\r\n            this.props.addAddress(address, this.props.history)\r\n        else\r\n            this.props.updateAddress(address);\r\n        this.setState({\r\n            id: \"\",\r\n            province: \"\",\r\n            city: \"\",\r\n            home: \"\",\r\n            zipCode: \"\",\r\n            update: false\r\n        })\r\n    }\r\n\r\n    onDelete(id) {\r\n        this.props.deleteAddress(id);\r\n    }\r\n\r\n    onUpdate(address) {\r\n        this.setState({\r\n            id: address.id,\r\n            province: address.province,\r\n            city: address.city,\r\n            home: address.home,\r\n            zipCode: address.zipCode,\r\n            update: true\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        let addressTable = null;\r\n        let {addresses} = this.props.addresses;\r\n        if (addresses.length > 0) {\r\n            addressTable = addresses.map((address, i) => (<tr>\r\n                <th scope=\"row\">{i + 1}</th>\r\n                <td>{address.province}</td>\r\n                <td>{address.city}</td>\r\n                <td>{address.home}</td>\r\n                <td>{address.zipCode}</td>\r\n                <td>\r\n                    <button onClick={event => this.onDelete(address.id)} className={\"btn btn-danger\"}>Delete</button>\r\n                </td>\r\n                <td>\r\n                    <button onClick={event => this.onUpdate(address)} className={\"btn btn-info\"}>Update</button>\r\n                </td>\r\n            </tr>))\r\n        }\r\n        console.log(isEmpty(this.state.address))\r\n        return (\r\n            <div>\r\n                <h1 className=\"my-4 text-center\">\r\n                    {!this.state.update ?\r\n                        \"Add\" : \"Update\"} Address</h1>\r\n                <div className=\"row my-3\">\r\n                    <div className=\"col-md\">\r\n                        <form onSubmit={event => this.onSubmit(event)}>\r\n                            <TextFieldGroup onChange={(e) => this.onChange(e)} placeholder={\"Province\"}\r\n                                            value={this.state.province}\r\n                                            name={\"province\"}/>\r\n                            <TextFieldGroup onChange={(e) => this.onChange(e)} placeholder={\"City\"}\r\n                                            value={this.state.city}\r\n                                            name={\"city\"}/>\r\n                            <TextFieldGroup onChange={(e) => this.onChange(e)} placeholder={\"Home\"}\r\n                                            value={this.state.home}\r\n                                            name={\"home\"}/>\r\n                            <TextFieldGroup onChange={(e) => this.onChange(e)} placeholder={\"Zip code\"}\r\n                                            value={this.state.zipCode}\r\n                                            name={\"zipCode\"}/>\r\n                            <button className={\"btn btn-info btn-block\"}>{(!this.state.update) ?\r\n                                \"Add\" : \"Update\"} Address\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-md\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                            <tr className={\"text-center\"}>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Province</th>\r\n                                <th scope=\"col\">City</th>\r\n                                <th scope=\"col\">Home</th>\r\n                                <th scope=\"col\">Zip code</th>\r\n                                <th colSpan={2}>Action</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {addressTable}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddress.propTypes = {\r\n    addAddress: propTypes.func.isRequired,\r\n    getAddress: propTypes.func.isRequired,\r\n    deleteAddress: propTypes.func.isRequired,\r\n    updateAddress: propTypes.func.isRequired,\r\n    addresses: propTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    addresses: state.addresses\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    addAddress, getAddress, deleteAddress,\r\n    updateAddress\r\n})(withRouter(Address));","import React from 'react';\nimport './App.css';\nimport Footer from \"./components/layout/Footer\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport Navbar from \"./components/layout/Navbar\";\nimport {Provider} from \"react-redux\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Landing from \"./components/layout/Landing\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport store from \"./store\";\nimport {logoutUser, setCurrentUser} from \"./actions/authActions\";\nimport Product from \"./components/product/Product\";\nimport Order from \"./components/order/Order\";\nimport PrivateRoute from \"./components/comman/PrivaterRoute\";\nimport ManageProducts from \"./components/manage/product/ManageProducts\";\nimport AddProduct from \"./components/manage/product/AddProduct\";\nimport UpdateProduct from \"./components/manage/product/UpdateProduct\";\nimport ManageOrders from \"./components/manage/order/ManageOrders\";\nimport Address from \"./components/address/Address\";\n\n\nfunction App() {\n    // Check for token\n    if (localStorage.jwtToken) {\n        // Set auth token header auth\n        setAuthToken(localStorage.jwtToken);\n        // Decode token and get user info and exp\n        const decoded = jwt_decode(localStorage.jwtToken);\n        // Set user and isAuthenticated\n        store.dispatch(setCurrentUser(decoded));\n\n        // Check for expired token\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            // Logout user\n            store.dispatch(logoutUser());\n            // Clear current Profile\n            // store.dispatch(clearCurrentProfile());\n            // Redirect to login\n            window.location.href = \"/login\";\n        }\n    }\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Navbar/>\n                    <Route exact path=\"/\" component={Landing}/>\n                    <div className=\"container\">\n                        <Route exact path=\"/register\" component={Register}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/product/:id\" component={Product}/>\n                        <Switch>\n                            <PrivateRoute exact path=\"/order/:id\" component={Order}/>\n                        </Switch>\n\n                        <Switch>\n                            <PrivateRoute exact path=\"/products\" component={ManageProducts}/>\n                        </Switch>\n                        <Switch>\n                            <PrivateRoute exact path=\"/add-product\" component={AddProduct}/>\n                        </Switch>\n                        <Switch>\n                            <PrivateRoute exact path=\"/update-product/:id\" component={UpdateProduct}/>\n                        </Switch>\n                        <Switch>\n                            <PrivateRoute exact path=\"/orders\" component={ManageOrders}/>\n                        </Switch>\n                        <Switch>\n                            <PrivateRoute exact path=\"/addresses\" component={Address}/>\n                        </Switch>\n                    </div>\n\n                    <Footer/>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}