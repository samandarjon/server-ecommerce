{"version":3,"sources":["components/product/ssd.jpg","components/layout/Footer.js","utils/setAuthToken.js","actions/authActions.js","actions/types.js","components/layout/Navbar.js","components/comman/TextFieldGroup.js","components/auth/Register.js","components/auth/Login.js","components/product/ProductItem.js","components/layout/Landing.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/categoryReducer.js","reducers/index.js","store.js","components/comman/TextAreaInputGroup.js","components/product/Product.js","components/order/Order.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","className","Date","getFullYear","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decode","type","payload","logoutUser","dispatch","localStorage","removeItem","Navbar","state","categories","get","then","res","console","log","data","_embedded","setState","catch","error","response","e","preventDefault","this","props","auth","isAuthenticated","authLink","user","href","id","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onClick","onLogoutClick","bind","guestLink","to","data-target","aria-controls","aria-label","map","category","name","Component","connect","TextFieldGroup","placeholder","value","label","info","onChange","disabled","classnames","defaultProps","Register","firstName","lastName","password","password2","phoneNumber","errors","onSubmit","history","push","nextProps","target","newUser","registerUser","message","noValidate","protoTypes","PropTypes","func","isRequired","object","userData","post","err","withRouter","Login","username","nextContext","loginUser","setItem","jwt_decode","productItem","title","description","price","img","addBasket","bayProduct","key","src","images","alt","Landing","ProductItem","isEmpty","undefined","Object","keys","length","trim","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","TextAreaFieldGroup","Product","defaultValue","event","width","Order","App","jwtToken","decoded","currentTime","now","exp","location","exact","path","component","Footer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.321c495a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ssd.f0488c14.jpg\";","import React from 'react';\r\n\r\n\r\nexport default () => (\r\n\r\n    <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\r\n        Copyright &copy; {new Date().getFullYear()} Ecommerce.uz\r\n    </footer>\r\n\r\n);","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nexport const registerUser = (userData, history) => dispatch => {\r\n    axios\r\n        .post(\"/api/auth/register\", userData)\r\n        .then(res => history.push(\"/login\"))\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n// Login get user Token\r\n\r\nexport const loginUser = userData => dispatch => {\r\n    axios\r\n        .post(\"/api/auth/login\", userData)\r\n        .then(res => {\r\n            // Save to Localstorge\r\n            const { token } = res.data;\r\n            // Set token to ls\r\n            localStorage.setItem(\"jwtToken\", token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decode = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decode));\r\n        })\r\n        .catch(err =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        );\r\n};\r\n\r\n// Set login in user\r\nexport const setCurrentUser = decode => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decode\r\n    };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header from future request\r\n    setAuthToken(false);\r\n    // Set current user to {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};\r\n","export let CLEAR_ERRORS = \"CLEAR_ERRORS\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const REGISTER_USER = \"REGISTER_USER\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\"\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\"","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser} from \"../../actions/authActions\";\r\nimport axios from \"axios\"\r\n\r\nclass Navbar extends Component {\r\n    onLogoutClick(e) {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            categories: []\r\n        }\r\n        axios.get(\"/api/categories\")\r\n            .then(res => {\r\n                console.log(res.data._embedded.categories)\r\n                this.setState({categories: res.data._embedded.categories})\r\n            }).catch(error => console.log(error.response))\r\n    }\r\n\r\n    render() {\r\n        const {isAuthenticated, user} = this.props.auth;\r\n        const authLink = (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                       data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Account\r\n                    </a>\r\n                    <div className=\"dropdown-menu mr-5\" aria-labelledby=\"navbarDropdown\">\r\n                        <a className=\"dropdown-item\" href=\"#\">Dashboard</a>\r\n                        <a className=\"dropdown-item\" href=\"#\">My orders</a>\r\n                        <a className=\"dropdown-item\" href=\"#\">Setting</a>\r\n                        <button\r\n                            onClick={this.onLogoutClick.bind(this)}\r\n                            className=\"nav-link logout\"\r\n                        >\r\n                            Log out\r\n                        </button>\r\n                    </div>\r\n\r\n                </li>\r\n            </ul>\r\n        );\r\n        const guestLink = (\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/register\">\r\n                        Sign Up\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        );\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <a className=\"navbar-brand\">Ecommerce</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link to=\"/\" className=\"nav-link\" href=\"#\">Home <span\r\n                                className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\"\r\n                               data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                Category\r\n                            </a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                {this.state.categories\r\n                                    .map(category => <Link className=\"dropdown-item\"\r\n                                                           to={\"/product/\" + category.id}>{category.name}</Link>)\r\n                                }\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Contact</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                    {/*<form className=\"form-group my-2 my-lg-0\">*/}\r\n                    {/*    <div className=\"input-group mb-3\">*/}\r\n                    {/*        <input className=\"form-control \" type=\"search\" placeholder=\"Search\"*/}\r\n                    {/*               aria-label=\"Search\"/>*/}\r\n                    {/*        <div className=\"input-group-append\">*/}\r\n                    {/*            <button className=\"btn btn-outline-success input-group-appen\" type=\"submit\">Search*/}\r\n                    {/*            </button>*/}\r\n                    {/*        </div>*/}\r\n                    {/*    </div>*/}\r\n                    {/*</form>*/}\r\n                    {isAuthenticated ? authLink : guestLink}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(\r\n    mapStatetoProps,\r\n    {logoutUser}\r\n)(Navbar);\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nconst TextFieldGroup = ({\r\n                            name,\r\n                            placeholder,\r\n                            value,\r\n                            type,\r\n                            label,\r\n                            error,\r\n                            info,\r\n                            onChange,\r\n                            disabled\r\n                        }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <input\r\n                type={type}\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error\r\n                })}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n                disabled={disabled}\r\n            />\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    disabled: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n    type: \"text\"\r\n};\r\nexport default TextFieldGroup;\r\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {registerUser} from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../comman/TextFieldGroup\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            phoneNumber: \"\",\r\n            errors: \"\"\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            phoneNumber: this.state.phoneNumber,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n\r\n        };\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">\r\n                                Create your ecommerce account\r\n                            </p>\r\n                            {errors.message && <p className=\"text-danger\">{errors.message}</p>}\r\n                            <form noValidate onSubmit={this.onSubmit}>\r\n\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Phone number\"\r\n                                    name=\"phoneNumber\"\r\n                                    value={this.state.phoneNumber}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.phoneNumber}/>\r\n                                <TextFieldGroup\r\n                                    placeholder=\"First name\"\r\n                                    name=\"firstName\"\r\n                                    value={this.state.firstName}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.firstName}\r\n                                />\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Last name\"\r\n                                    name=\"lastName\"\r\n                                    value={this.state.lastName}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.lastName}\r\n\r\n                                />\r\n                                <TextFieldGroup\r\n                                    type=\"password\"\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.password}\r\n                                />\r\n                                <TextFieldGroup\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm password\"\r\n                                    name=\"password2\"\r\n                                    value={this.state.password2}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.password2}\r\n                                />\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.protoTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n    {registerUser}\r\n)(withRouter(Register));\r\n","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport TextFieldGroup from \"../comman/TextFieldGroup\";\r\nimport {loginUser} from \"../../actions/authActions\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: \"\"\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (nextProps.auth.isAuthenticated) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const userData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        this.props.loginUser(userData);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <p className=\"lead text-center\">\r\n                                Sign in to your DevConnector account\r\n                            </p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Username\"\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.username ? errors.username : errors.message}\r\n                                />\r\n                                <TextFieldGroup\r\n                                    placeholder=\"Password\"\r\n                                    name=\"password\"\r\n                                    type=\"password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}\r\n                                    error={errors.password}\r\n                                />\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {loginUser}\r\n)(Login);\r\n","import React from 'react';\r\nimport \"./product.css\"\r\nimport images from \"./ssd.jpg\"\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst productItem = ({title, description, img, price, id, addBasket, bayProduct}) => {\r\n    return (\r\n        <div key={id} className=\"card\">\r\n            <img className=\"card-img-top\" src={images} alt=\"Card image cap\"/>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <p className=\"card-text\">{description}</p>\r\n                <p className=\"card-text\"><h4 className=\"text-muted\">Price: {price + \" $\"}</h4></p>\r\n                <p className=\"card-text text-center\">\r\n                    <button className=\"btn btn-danger fs\" ><i className=\"fas fa-shopping-basket\"/> Add to basket</button>\r\n                    <Link className=\" ml-2 btn btn-info\" to={\"product/\" + id}><i className=\"fas fa-eye\"/> Preview</Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default productItem;","import React, {Component} from 'react';\r\nimport ProductItem from \"../product/ProductItem\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"card-deck mt-2\">\r\n                            <div className=\"card-columns\">\r\n\r\n                                <ProductItem title=\"SSD m2 Evo920\"\r\n                                             description=\" Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsam, nemo?\"\r\n                                             price=\"100\" id=\"1\"/>\r\n                                <ProductItem title=\"SSD m2 Evo920\"\r\n                                             description=\" Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsam, nemo?\"\r\n                                             price=\"100\"/>\r\n                                <ProductItem title=\"SSD m2 Evo920\"\r\n                                             description=\" Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsam, nemo?\"\r\n                                             price=\"100\" id=\"1\"/>\r\n                                <ProductItem title=\"SSD m2 Evo920\"\r\n                                             description=\" Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsam, nemo?\"\r\n                                             price=\"100\"/>\r\n                                <ProductItem title=\"SSD m2 Evo920\"\r\n                                             description=\" Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsam, nemo?\"\r\n                                             price=\"100\"/>\r\n                                <ProductItem\r\n                                    title=\"SSD m2 Evo920\"\r\n                                    description=\" Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsam, nemo?\"\r\n                                    price=\"100\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","const isEmpty = (value) =>\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default  isEmpty;","import isEmpty from '../validation/is-empty'\r\nimport { SET_CURRENT_USER} from '../actions/types';\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:{\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS, CLEAR_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS: {\r\n            return action.payload;\r\n        }\r\n        case CLEAR_ERRORS: {\r\n            return {};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_CATEGORIES} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    categories: []\r\n}\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CATEGORIES:\r\n            return {\r\n                ...state,\r\n                categories: action.payload\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n    }\r\n\r\n}","import {combineReducers} from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport categoryReducer from \"./categoryReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    categories: categoryReducer,\r\n    errors: errorReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextAreaFieldGroup = ({\r\n                                name,\r\n                                placeholder,\r\n                                value,\r\n                                error,\r\n                                info,\r\n                                onChange,\r\n                            }) => {\r\n    console.log(value)\r\n    return (\r\n        <div className=\"form-group\">\r\n\r\n            <textarea\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": error\r\n                })}\r\n                placeholder={placeholder}\r\n                name={name}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {info && <small className=\"form-text text-muted\">{info}</small>}\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextAreaFieldGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    info: PropTypes.string,\r\n    error: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextAreaFieldGroup;\r\n","import React, {Component} from 'react';\r\nimport images from \"./ssd.jpg\"\r\nimport TextAreaFieldGroup from \"../comman/TextAreaInputGroup\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Product extends Component {\r\n    state = {\r\n        \"amount\": 0,\r\n        \"message\": \"\"\r\n    }\r\n\r\n    onChange(e) {\r\n        console.log(e.target.value)\r\n        this.setState({[e.target.name]: (e.target.value)});\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row my-4\">\r\n                    <div className=\"col-md col-sm-12\">\r\n                        <img src={images} alt=\"this is a product images\" className=\"img-fluid\"/>\r\n                    </div>\r\n                    <div className=\"col-md col-sm-12\">\r\n                        <h4><b>Title: Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloribus ex magnam\r\n                            minima\r\n                            nihild\r\n                            obcaecati quod, ratione. Hic minima nesciunt reprehenderit!</b></h4>\r\n                        <h5 className=\"text-muted\"><b> Price: 100 $ </b></h5>\r\n                        <p>Desciption: Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ab aut beatae esse\r\n                            explicabo id ipsam libero, officia perspiciatis quibusdam tenetur.</p>\r\n                        <ul className=\"list-group list-group-flush my-3\">\r\n                            <li className=\"list-group-item\">Storge: 64GB</li>\r\n                            <li className=\"list-group-item\">Display Size: 12</li>\r\n                            <li className=\"list-group-item\">Morbi leo risus</li>\r\n                            <li className=\"list-group-item\">Porta ac consectetur ac</li>\r\n                            <li className=\"list-group-item\">Vestibulum at eros</li>\r\n                        </ul>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">Amount</span>\r\n                            </div>\r\n                            <input type=\"number\" name=\"amount\" className=\"form-control\" defaultValue={0}\r\n                                   onChange={event => this.onChange(event)}/>\r\n                        </div>\r\n                        <Link className=\"btn btn-info btn-block\" to=\"/order/product_id\">Buy</Link>\r\n                        <button className=\"btn btn-danger btn-block\">Add to basket</button>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"\">\r\n\r\n                    <div className=\"col-md-12\">\r\n                        <h6>Feedback</h6>\r\n                        <div className=\"form-group\">\r\n                            <TextAreaFieldGroup\r\n                                placeholder=\"Product to feedback\"\r\n                                value={this.state.message}\r\n                                name=\"message\"\r\n                                onChange={(e) => this.onChange(e)}\r\n                                error={this.state.message}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark\">\r\n                            Submit\r\n                        </button>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"col-md-12\">\r\n                        <ul className=\"list-group list-group-flush my-3\">\r\n                            <li className=\"list-group-item\">\r\n                                <div className=\"feedback-group\">\r\n                                    <img src={images} width=\"80px\" className=\"img-fluid img\"/>\r\n                                    <h6>Samandar Akbarov</h6>\r\n                                </div>\r\n                                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Est, maiores?</p>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;","import React, {Component} from 'react';\r\n\r\nclass Order extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                order\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\nimport './App.css';\nimport Footer from \"./components/layout/Footer\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport Navbar from \"./components/layout/Navbar\";\nimport {Provider} from \"react-redux\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Landing from \"./components/layout/Landing\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport store from \"./store\";\nimport {logoutUser, setCurrentUser} from \"./actions/authActions\";\nimport Product from \"./components/product/Product\";\nimport Order from \"./components/order/Order\";\nimport axios from \"axios\"\n\n\n\nfunction App() {\n    // Check for token\n    if (localStorage.jwtToken) {\n        // Set auth token header auth\n        setAuthToken(localStorage.jwtToken);\n        // Decode token and get user info and exp\n        const decoded = jwt_decode(localStorage.jwtToken);\n        // Set user and isAuthenticated\n        store.dispatch(setCurrentUser(decoded));\n\n        // Check for expired token\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            // Logout user\n            store.dispatch(logoutUser());\n            // Clear current Profile\n            // store.dispatch(clearCurrentProfile());\n            // Redirect to login\n            window.location.href = \"/login\";\n        }\n    }\n    return (<Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <Navbar/>\n                    <Route exact path=\"/\" component={Landing}/>\n                    <div className=\"container\">\n                        <Route exact path=\"/register\" component={Register}/>\n                        <Route exact path=\"/login\" component={Login}/>\n                        <Route exact path=\"/product/:id\" component={Product}/>\n                        <Route exact path=\"/order/:id\" component={Order}/>\n                    </div>\n                    <Footer/>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n// axios.defaults.baseURL = 'http://localhost:8080';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}